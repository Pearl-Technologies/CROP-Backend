const adminBusinessRequestAndComplainNotification = require("../../../models/admin/notification/businessRequestAndComplainNotification")
const complaintNotification = require("../../../models/businessModel/businessNotification/complaintNotification")

const createMissingCropNotification = async (missingCropsId, businessId) => {
  try {
    const getAdminBusinessNotification =
      await adminBusinessRequestAndComplainNotification.findOne({})
    let desc = getAdminBusinessNotification.missing_points_claim
    const missingCropNotification = new complaintNotification({
      type: "missingCrops",
      desc,
      missingCropsId,
      businessId,
    })
    await missingCropNotification.save()
    return
  } catch (error) {
    console.log(error)
    res.status(500).send("Internal Server Error")
  }
}

const createComplaintNotification = async (complaintId, businessId) => {
  try {
    const getAdminBusinessNotification =
      await adminBusinessRequestAndComplainNotification.findOne({})
    let desc = getAdminBusinessNotification.complaint
    const missingCropNotification = new complaintNotification({
      type: "complaint",
      desc,
      complaintId,
      businessId,
    })
    await missingCropNotification.save()
  } catch (error) {
    console.log(error)
    res.status(500).send("Internal Server Error")
  }
}

const createRequestNotification = async (requestId, businessId) => {
  try {
    const getAdminBusinessNotification =
      await adminBusinessRequestAndComplainNotification.findOne({})
    let desc = getAdminBusinessNotification.request
    const missingCropNotification = new complaintNotification({
      type: "request",
      desc,
      requestId,
      businessId,
    })
    await missingCropNotification.save()
  } catch (error) {
    console.log(error)
    res.status(500).send("Internal Server Error")
  }
}

const createAutoGeneratedServiceRequestNotification = async (
  autoGeneratedServiceId,
  businessId
) => {
  try {
    const getAdminBusinessNotification =
      await adminBusinessRequestAndComplainNotification.findOne({})
    let desc = getAdminBusinessNotification.auto_generated_service_requests
    const missingCropNotification = new complaintNotification({
      type: "autoGeneratedServiceRequest",
      desc,
      autoGeneratedServiceId,
      businessId,
    })
    await missingCropNotification.save()
  } catch (error) {
    console.log(error)
    res.status(500).send("Internal Server Error")
  }
}

const getRequestAndComplaintNofications = async (req, res) => {
  const businessId = req.user.user.id
  const type = req.params.type
  try {
    const complaintNotification = await complaintNotification.find({
      businessId,
      type,
    })
    return res.status(200).send(complaintNotification)
  } catch (error) {
    console.log(error)
  }
}

module.exports = {
  createMissingCropNotification,
  createComplaintNotification,
  createRequestNotification,
  createAutoGeneratedServiceRequestNotification,
  getRequestAndComplaintNofications,
}
